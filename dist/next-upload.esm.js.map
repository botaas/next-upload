{"version":3,"file":"next-upload.esm.js","sources":["../src/utils/client.ts","../src/utils/keys.ts","../src/app/api/upload/s3/route.ts","../src/components/FileInput.tsx","../src/hooks/use-upload-files.tsx","../src/hooks/use-uploader.ts","../src/hooks/use-s3-upload.tsx","../src/hooks/use-presigned-upload.ts","../src/utils/image-data.ts","../src/utils/private-files.ts"],"sourcesContent":["import { S3Client } from '@aws-sdk/client-s3';\nimport { S3Config } from './config';\n\nexport function getClient(config: S3Config) {\n  const client = new S3Client({\n    credentials: {\n      accessKeyId: config.accessKeyId,\n      secretAccessKey: config.secretAccessKey,\n    },\n    region: config.region,\n    ...(config.forcePathStyle ? { forcePathStyle: config.forcePathStyle } : {}),\n    ...(config.endpoint ? { endpoint: config.endpoint } : {}),\n  });\n\n  return client;\n}","import { v4 as uuidv4 } from 'uuid';\n\nexport const uuid = () => uuidv4();\n\nconst SAFE_CHARACTERS = /[^0-9a-zA-Z!_\\\\.\\\\*'\\\\(\\\\)\\\\\\-/]/g;\nexport const sanitizeKey = (value: string) =>\n  value.replace(SAFE_CHARACTERS, ' ').replace(/\\s+/g, '-');","import { NextRequest, NextResponse } from \"next/server\";\nimport { PutObjectCommand } from '@aws-sdk/client-s3';\nimport { S3Config } from '../../../../utils/config';\nimport { getClient } from '../../../../utils/client';\nimport { sanitizeKey, uuid } from '../../../../utils/keys';\nimport { getSignedUrl } from '@aws-sdk/s3-request-presigner';\nimport {\n  STSClient,\n  GetFederationTokenCommand,\n  STSClientConfig,\n} from '@aws-sdk/client-sts';\n\n\ntype Options = S3Config & {\n  key?: (request: Request, filename: string) => string | Promise<string>;\n};\n\ntype OptionsFetcher = (request: NextRequest) => Promise<Options>;\n\nconst makeRouteHandler = (optionsFetcher?: OptionsFetcher) => {\n  const route = async function (request: NextRequest) {    \n    const { strategy, filename, filetype } = await request.json();\nconsole.log('filetype: ', filetype)\n    if (!optionsFetcher) {\n      return new Response(\"S3 Upload: Missing config\", { status: 400 })\n    }\n\n    const options = await optionsFetcher(request);\n    if (!options) {\n      return new Response(\"S3 Upload: No config fetched\", { status: 400 })\n    }\n\n    const key = options.key ? await Promise.resolve(options.key(request, filename)) : `uploads/${uuid()}/${sanitizeKey(filename)}`;\n    let { bucket, region, endpoint } = options;\n\n    if (strategy === 'presigned') {\n      const client = getClient(options);\n  \n      const params = {\n        Bucket: bucket,\n        Key: key,\n        ContentType: filetype,\n        CacheControl: 'max-age=630720000',\n      }\n\n      const url = await getSignedUrl(client, new PutObjectCommand(params), {\n        expiresIn: 60 * 60,\n      });\n\n      return NextResponse.json({\n        key,\n        bucket,\n        region,\n        endpoint,\n        url,\n      });\n    } else {\n      let stsConfig: STSClientConfig = {\n        credentials: {\n          accessKeyId: options.accessKeyId,\n          secretAccessKey: options.secretAccessKey,\n        },\n        region,\n      };\n\n      const policy = {\n        Statement: [\n          {\n            Sid: 'Stmt1S3UploadAssets',\n            Effect: 'Allow',\n            Action: ['s3:PutObject'],\n            Resource: [`arn:aws:s3:::${bucket}/${key}`],\n          },\n        ],\n      };\n\n      const sts = new STSClient(stsConfig);\n\n      const command = new GetFederationTokenCommand({\n        Name: 'S3UploadWebToken',\n        Policy: JSON.stringify(policy),\n        DurationSeconds: 60 * 60, // 1 hour\n      });\n\n      const token = await sts.send(command);\n\n      return NextResponse.json({\n        token,\n        key,\n        bucket,\n        region,\n      });\n    }\n  }\n\n  let configure = (optionsFetcher: OptionsFetcher) => makeRouteHandler(optionsFetcher);\n  return Object.assign(route, { configure })\n}\n\nconst APIRoute = makeRouteHandler();\nexport { APIRoute }\n","import React, { ChangeEvent, InputHTMLAttributes } from 'react';\nimport { forwardRef } from 'react';\n\ntype FileInputProps = {\n  onChange: (\n    file: File | undefined,\n    event: ChangeEvent<HTMLInputElement>\n  ) => void;\n} & InputHTMLAttributes<HTMLInputElement>;\n\nexport const FileInput = forwardRef<HTMLInputElement, FileInputProps>(\n  ({ onChange = () => {}, ...restOfProps }, forwardedRef) => {\n    let handleChange = (event: ChangeEvent<HTMLInputElement>): void => {\n      let file = event.target?.files?.[0];\n      onChange(file, event);\n    };\n\n    return (\n      <input\n        onChange={handleChange}\n        {...restOfProps}\n        ref={forwardedRef}\n        type=\"file\"\n      />\n    );\n  }\n);","import React from 'react';\nimport { FileInput } from '../components/FileInput';\nimport { useRef, useState } from 'react';\n\ntype TrackedFile = {\n  file: File;\n  progress: number;\n  uploaded: number;\n  size: number;\n};\n\nexport const useUploadFiles = () => {\n  let ref = useRef<HTMLInputElement>();\n  let [files, setFiles] = useState<TrackedFile[]>([]);\n\n  let openFileDialog = () => {\n    if (ref.current) {\n      ref.current.value = '';\n      ref.current?.click();\n    }\n  };\n\n  let resetFiles = () => {\n    setFiles([]);\n  };\n\n  let updateFileProgress = (file: File, uploaded: number) => {\n    setFiles(files =>\n      files.map(trackedFile =>\n        trackedFile.file === file\n          ? {\n              file,\n              uploaded,\n              size: file.size,\n              progress: file.size ? (uploaded / file.size) * 100 : 0,\n            }\n          : trackedFile\n      )\n    );\n  };\n\n  let addFile = (file: File) => {\n    setFiles(files => [\n      ...files,\n      { file, progress: 0, uploaded: 0, size: file.size },\n    ]);\n  };\n\n  return {\n    FileInput: (props: any) => (\n      <FileInput {...props} ref={ref} style={{ display: 'none' }} />\n    ),\n    openFileDialog,\n    files,\n    addFile,\n    updateFileProgress,\n    resetFiles,\n  };\n};","import { useUploadFiles } from './use-upload-files';\n\ntype UploadResult = {\n  url: string;\n  bucket: string;\n  key: string;\n};\n\ntype RequestOptions = {\n  url?: string;\n  body?: Record<string, any>;\n  headers?: HeadersInit;\n};\n\ntype UploadToS3Options = {\n  endpoint?: {\n    request: RequestOptions;\n  };\n};\n\n// Outdated options we no longer want support.\ntype OldOptions = {\n  endpoint: string;\n};\n\ntype Strategy = 'presigned' | 'aws-sdk';\n\nexport type Uploader<P = any> = (\n  file: File,\n  params: P,\n  eventHandlers: {\n    onProgress: (uploaded: number) => void;\n  }\n) => Promise<UploadResult>;\n\nexport const useUploader = (\n  strategy: Strategy,\n  uploader: Uploader,\n  oldOptions?: OldOptions\n) => {\n  let {\n    addFile,\n    updateFileProgress,\n    FileInput,\n    openFileDialog,\n    files,\n    resetFiles,\n  } = useUploadFiles();\n\n  let uploadToS3 = async (file: File, options: UploadToS3Options = {}) => {\n    // combine old options and new options. remove after 1.0\n    if (oldOptions?.endpoint) {\n      if (process.env.NODE_ENV === 'development') {\n        console.warn(\n          '[Next S3 Upload] The `endpoint` option has been replaced by `endpoint.request.url`. For more information see: https://next-s3-upload.codingvalue.com/changes/endpoint'\n        );\n      }\n\n      if (options.endpoint) {\n        options.endpoint.request.url = oldOptions.endpoint;\n      } else {\n        options.endpoint = {\n          request: {\n            url: oldOptions.endpoint,\n          },\n        };\n      }\n    }\n\n    const params = await getUploadParams(\n      strategy,\n      file,\n      options.endpoint?.request\n    );\n\n    if (params.error) {\n      console.error(params.error);\n      throw params.error;\n    }\n\n    addFile(file);\n\n    const result = await uploader(file, params, {\n      onProgress: uploaded => updateFileProgress(file, uploaded),\n    });\n\n    return result;\n  };\n\n  return {\n    FileInput,\n    openFileDialog,\n    uploadToS3,\n    files,\n    resetFiles,\n  };\n};\n\nlet getUploadParams = async (\n  strategy: Strategy,\n  file: File,\n  requestOptions?: RequestOptions\n) => {\n  let additionalBody = requestOptions?.body ?? {};\n  let additionalHeaders = requestOptions?.headers ?? {};\n  let apiRouteUrl = requestOptions?.url ?? '/api/upload/s3';\n\n  let body = {\n    filename: file.name,\n    filetype: file.type,\n    strategy,\n    ...additionalBody,\n  };\n\n  let headers = {\n    ...additionalHeaders,\n    'Content-Type': 'application/json',\n  };\n\n  let res = await fetch(apiRouteUrl, {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body),\n  });\n\n  return await res.json();\n};","import {\n  CompleteMultipartUploadCommandOutput,\n  S3Client,\n} from '@aws-sdk/client-s3';\nimport { Upload } from '@aws-sdk/lib-storage';\nimport { Uploader, useUploader } from './use-uploader';\n\ntype Params = {\n  key: string;\n  bucket: string;\n  token: Record<string, any>;\n  region: string;\n};\n\nlet upload: Uploader<Params> = async (file, params, { onProgress }) => {\n  let { key, bucket, token, region } = params;\n\n  let client = new S3Client({\n    credentials: {\n      accessKeyId: token.Credentials.AccessKeyId,\n      secretAccessKey: token.Credentials.SecretAccessKey,\n      sessionToken: token.Credentials.SessionToken,\n    },\n    region: region,\n  });\n\n  let uploadParams = {\n    Bucket: bucket,\n    Key: key,\n    Body: file,\n    CacheControl: 'max-age=630720000, public',\n    ContentType: file.type,\n  };\n\n  // at some point make this configurable\n  // let uploadOptions = {\n  //   partSize: 100 * 1024 * 1024,\n  //   queueSize: 1,\n  // };\n\n  let s3Upload = new Upload({\n    client,\n    params: uploadParams,\n  });\n\n  s3Upload.on('httpUploadProgress', progress => {\n    let uploaded = progress.loaded ?? 0;\n    onProgress(uploaded);\n  });\n\n  let uploadResult = (await s3Upload.done()) as CompleteMultipartUploadCommandOutput;\n\n  let url =\n    uploadResult.Bucket && uploadResult.Key\n      ? `https://${uploadResult.Bucket}.s3.${region}.amazonaws.com/${uploadResult.Key}`\n      : '';\n\n  return {\n    url,\n    bucket: uploadResult.Bucket ?? '',\n    key: uploadResult.Key ?? '',\n  };\n};\n\nexport const useS3Upload = (options?: { endpoint: string }) => {\n  let hook = useUploader('aws-sdk', upload, options);\n  return hook;\n};","import { Uploader, useUploader } from './use-uploader';\n\nlet upload: Uploader = async (file, params, { onProgress }) => {\n  let { url, key, bucket, region, endpoint } = params;\n  let buffer = await file.arrayBuffer();\n\n  await new Promise<void>((resolve, reject) => {\n    let xhr = new XMLHttpRequest();\n\n    xhr.upload.onprogress = (event: ProgressEvent) => {\n      onProgress(event.loaded);\n    };\n\n    xhr.open('PUT', url, true);\n    xhr.setRequestHeader('Content-Type', file.type);\n    xhr.setRequestHeader('Cache-Control', 'max-age=630720000');\n\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        if (xhr.status >= 200 && xhr.status < 300) {\n          resolve();\n        } else {\n          reject();\n        }\n      }\n    };\n\n    xhr.send(buffer);\n  });\n\n  let resultUrl = endpoint\n    ? `${endpoint}/${bucket}/${key}`\n    : `https://${bucket}.s3.${region}.amazonaws.com/${key}`;\n\n  return {\n    url: resultUrl,\n    bucket,\n    key,\n  };\n};\n\nexport const usePresignedUpload = () => {\n  let hook = useUploader('presigned', upload);\n  return hook;\n};","interface ImageData {\n  height: number | undefined;\n  width: number | undefined;\n}\n\nexport const getImageData = (file: File | Blob): Promise<ImageData> => {\n  return new Promise(resolve => {\n    if (file.type.split('/')?.[0] === 'image') {\n      let img = new Image();\n      let objectUrl = URL.createObjectURL(file);\n      img.onload = (event: Event) => {\n        let image = event.target as HTMLImageElement;\n        resolve({ height: image.height, width: image.width });\n        URL.revokeObjectURL(objectUrl);\n      };\n      img.src = objectUrl;\n    } else {\n      resolve({ height: undefined, width: undefined });\n    }\n  });\n};","import { getSignedUrl } from '@aws-sdk/s3-request-presigner';\nimport { GetObjectCommand } from '@aws-sdk/client-s3';\nimport { S3Config } from './config';\nimport { getClient } from './client';\n\nexport const generateTemporaryUrl = async (\n  key: string,\n  config: S3Config\n) => {\n  let client = getClient(config);\n\n  let command = new GetObjectCommand({\n    Bucket: config.bucket,\n    Key: key,\n  });\n\n  let url = await getSignedUrl(client, command, { expiresIn: 3600 });\n\n  return url;\n};"],"names":["getClient","config","client","S3Client","_extends","credentials","accessKeyId","secretAccessKey","region","forcePathStyle","endpoint","uuid","uuidv4","SAFE_CHARACTERS","sanitizeKey","value","replace","makeRouteHandler","optionsFetcher","route","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","request","_yield$request$json","strategy","filename","filetype","options","key","bucket","params","url","stsConfig","policy","sts","command","token","wrap","_callee$","_context","prev","next","json","sent","console","log","abrupt","Response","status","Promise","resolve","t0","Bucket","Key","ContentType","CacheControl","getSignedUrl","PutObjectCommand","expiresIn","NextResponse","Statement","Sid","Effect","Action","Resource","STSClient","GetFederationTokenCommand","Name","Policy","JSON","stringify","DurationSeconds","send","stop","_x","apply","arguments","configure","Object","assign","APIRoute","FileInput","forwardRef","forwardedRef","onChange","_ref$onChange","restOfProps","_objectWithoutPropertiesLoose","_excluded","handleChange","event","file","_event$target","target","_event$target$files","files","React","ref","type","useUploadFiles","useRef","_useState","useState","setFiles","openFileDialog","current","_ref$current","click","resetFiles","updateFileProgress","uploaded","map","trackedFile","size","progress","addFile","concat","props","style","display","useUploader","uploader","oldOptions","_useUploadFiles","uploadToS3","process","env","NODE_ENV","warn","getUploadParams","_options$endpoint","error","onProgress","result","_x2","_ref2","_callee2","requestOptions","_requestOptions$body","_requestOptions$heade","_requestOptions$url","additionalBody","additionalHeaders","apiRouteUrl","body","headers","res","_callee2$","_context2","name","fetch","method","_x3","_x4","_x5","upload","_uploadResult$Bucket","_uploadResult$Key","uploadParams","s3Upload","uploadResult","Credentials","AccessKeyId","SecretAccessKey","sessionToken","SessionToken","Body","Upload","on","_progress$loaded","loaded","done","useS3Upload","hook","buffer","resultUrl","arrayBuffer","reject","xhr","XMLHttpRequest","onprogress","open","setRequestHeader","onreadystatechange","readyState","usePresignedUpload","getImageData","_file$type$split","split","img","Image","objectUrl","URL","createObjectURL","onload","image","height","width","revokeObjectURL","src","undefined","generateTemporaryUrl","GetObjectCommand"],"mappings":"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"}